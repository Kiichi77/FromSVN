<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:component-scan base-package="cn.com.kxcomm" />
	<!-- database conection config -->
	 <bean id="baseDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://192.168.1.11:3306/ipmi2?characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="123" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="1000" />
	</bean> 
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	
	<!--Hibernate TransactionManager-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- hibernate config -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	<property name="dataSource" ref="baseDataSource" />
	<property name="hibernateProperties">
		<props>
		<!-- 用于调试 -->
			<prop key="hibernate.show_sql">true</prop>
			<prop key="hibernate.format_sql">true</prop>
			<prop key="hibernate.use_sql_comments">false</prop>
			<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			<prop key="hibernate.connection.release_mode">after_transaction</prop>
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<prop key="hibernate.jdbc.fetch_size">50</prop>
			<prop key="hibernate.jdbc.batch_size">30</prop>
			<prop key="hibernate.generate_statistics">false</prop>
			<!-- 启用二级缓存 -->
			<prop key="hibernate.cache.use_second_level_cache">true</prop>
			<!--配置缓存插件 -->
			<prop key="hibernate.cache.provider_class">com.googlecode.hibernate.memcached.MemcachedCacheProvider</prop>
			<!-- 设置memcache缓存服务器端口 -->
			<prop key="hibernate.memcached.servers">192.168.1.11:11211</prop>
			<!-- 否使用结构化的方式缓存对象 -->
			<prop key="hibernate.cache.use_structured_entries">true</prop>
			<!-- 设置二级缓存的前缀名称 -->
			<prop key="hibernate.cache.region_prefix">quality.cache.ehcache</prop> 
			<!--启用查询缓存 -->
			<prop key="hibernate.cache.use_query_cache">true</prop>
		</props>
	</property>
	<property name="annotatedClasses">
		<list>
			<value>cn.com.kxcomm.ipmi.entity.TbBlackName</value>
			<value>cn.com.kxcomm.ipmi.entity.TbHistoryServerInfo</value>
			<value>cn.com.kxcomm.ipmi.entity.TbPolicy</value>
			<value>cn.com.kxcomm.ipmi.entity.TbPolicySever</value>
			<value>cn.com.kxcomm.ipmi.entity.TbRight</value>
			<value>cn.com.kxcomm.ipmi.entity.TbRightRole</value>
			<value>cn.com.kxcomm.ipmi.entity.TbServer</value>
			<value>cn.com.kxcomm.ipmi.entity.TbSystemEventLog</value>
			<value>cn.com.kxcomm.ipmi.entity.TbSystemoperlog</value>
			<value>cn.com.kxcomm.ipmi.entity.TbUser</value>
			<value>cn.com.kxcomm.ipmi.entity.TbRole</value>
			<value>cn.com.kxcomm.ipmi.entity.TbBelong</value>
			<value>cn.com.kxcomm.ipmi.entity.TbServerBelong</value>
			<value>cn.com.kxcomm.ipmi.entity.TbRole</value>
			<value>cn.com.kxcomm.ipmi.entity.AlertEntity</value>
			<value>cn.com.kxcomm.ipmi.entity.DimDateEntity</value>
			<value>cn.com.kxcomm.ipmi.entity.FactServerInfoEntity</value>
			<value>cn.com.kxcomm.ipmi.entity.AlertServerEntity</value>
		</list>
	</property>
</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- dao config -->
	<bean id="commonDAO" class="cn.com.kxcomm.task.base.CommonDAO">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
    <bean id="tbServerDAO" class="cn.com.kxcomm.task.dao.TbServerDAO" parent="commonDAO" ></bean>
    <bean id="tbBlackNameDAO" class="cn.com.kxcomm.task.dao.TbBlackNameDAO" parent="commonDAO" ></bean>
    <bean id="tbHistoryServerInfoDAO" class="cn.com.kxcomm.task.dao.TbHistoryServerInfoDAO" parent="commonDAO" ></bean>
    <bean id="alertDAO" class="cn.com.kxcomm.task.dao.AlertDAO" parent="commonDAO" ></bean>
    <bean id="policyDAO" class="cn.com.kxcomm.task.dao.PolicyDAO" parent="commonDAO" ></bean>
    <bean id="policyServerDAO" class="cn.com.kxcomm.task.dao.PolicyServerDAO" parent="commonDAO" ></bean>
    <bean id="systemEventLogDAO" class="cn.com.kxcomm.task.dao.SystemEventLogDAO" parent="commonDAO" ></bean>
    <bean id="powerStatisticsDAO" class="cn.com.kxcomm.task.dao.PowerStatisticsDAO" parent="commonDAO"></bean>
    <bean id="dimDateDAO" class="cn.com.kxcomm.task.dao.DimDateDAO" parent="commonDAO"></bean>
   
   <!-- Memcached配置 -->
    <bean id="memcachedPool" class="com.danga.MemCached.SockIOPool" factory-method="getInstance" init-method="initialize" destroy-method="shutDown">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
				<value>192.168.1.11:11211</value>
				<!--多服务器 <value> 192.168.54.207:12346 </value> -->
			</list>
		</property>
		<!--多服务器负载均衡 -->
		<!--<property name="weights"> <value>5,5</value> </property> -->
		<property name="initConn">
			<value>20</value>
		</property>
		<property name="minConn">
			<value>10</value>
		</property>
		<property name="maxConn">
			<value>500</value>
		</property>
		<property name="maintSleep">
			<value>30</value>
		</property>
		<property name="nagle">
			<value>false</value>
		</property>
		<property name="maxIdle">
			<value>6000</value>
		</property>
		<property name="socketTO">
			<value>3000</value>
		</property>
	</bean>
	<!--memcached client -->
	<bean id="memcachedClient" class="com.danga.MemCached.MemCachedClient">
		<constructor-arg>
			<value>neeaMemcachedPool</value>
		</constructor-arg>
	</bean>
	<!--memcached 客户端***end -->
	<!--如果换客户端或者换缓存了，修改这里即可-->
	<bean id="cache" class="cn.com.kxcomm.ipmi.memcached.CacheClientImpl">
		<property name="cacheProvider" ref="memcachedClient"/>
	</bean>
</beans>