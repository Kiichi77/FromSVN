package test;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import cn.com.kxcomm.contractmanage.dao.ArrivalProvedDAO;
import cn.com.kxcomm.contractmanage.dao.ConfigModelsDAO;
import cn.com.kxcomm.contractmanage.dao.ContractDAO;
import cn.com.kxcomm.contractmanage.dao.ContractOrderDAO;
import cn.com.kxcomm.contractmanage.dao.ContractOrderRelationshipDataDAO;
import cn.com.kxcomm.contractmanage.dao.ContractReceivePaymentDAO;
import cn.com.kxcomm.contractmanage.dao.ContractReceivePaymentDataDAO;
import cn.com.kxcomm.contractmanage.dao.DataRecordDAO;
import cn.com.kxcomm.contractmanage.dao.DataSourceDAO;
import cn.com.kxcomm.contractmanage.dao.ModelDataDAO;
import cn.com.kxcomm.contractmanage.dao.ProductCategoryDAO;
import cn.com.kxcomm.contractmanage.dao.ProductTypeDAO;
import cn.com.kxcomm.contractmanage.dao.QuotationsDAO;
import cn.com.kxcomm.contractmanage.dao.QuotationsDataDAO;
import cn.com.kxcomm.contractmanage.dao.RightDAO;
import cn.com.kxcomm.contractmanage.dao.RightRoleDAO;
import cn.com.kxcomm.contractmanage.dao.RoleDAO;
import cn.com.kxcomm.contractmanage.dao.UserDAO;
import cn.com.kxcomm.contractmanage.service.impl.ConfigModelsService;
import cn.com.kxcomm.contractmanage.service.impl.ContractOrderRelationshipDataService;
import cn.com.kxcomm.contractmanage.service.impl.ContractOrderService;
import cn.com.kxcomm.contractmanage.service.impl.ContractQuotationsService;
import cn.com.kxcomm.contractmanage.service.impl.ContractReceivePaymentDataService;
import cn.com.kxcomm.contractmanage.service.impl.ContractReceivePaymentService;
import cn.com.kxcomm.contractmanage.service.impl.ContractService;
import cn.com.kxcomm.contractmanage.service.impl.CustomerAddressInfoService;
import cn.com.kxcomm.contractmanage.service.impl.DataSourceService;
import cn.com.kxcomm.contractmanage.service.impl.InvoiceService;
import cn.com.kxcomm.contractmanage.service.impl.PurchaseCompanyService;
import cn.com.kxcomm.contractmanage.service.impl.PurchaseOrderService;
import cn.com.kxcomm.contractmanage.service.impl.UserServiceImpl;
import cn.com.kxcomm.contractmanage.web.util.Parameters;

public class BaseTest {
	private String localTomcatDir = "D://workspace//.metadata//.plugins//org.eclipse.wst.server.core//tmp0//wtpwebapps//ContractManage//";
	private ApplicationContext ctx;
	public DataSourceDAO dataSourceDAO;
	public DataRecordDAO dataRecordDAO;
	public DataSourceService dataSourceService;
	public ConfigModelsDAO configModelsDAO;
	public ContractService contractService;
	public ProductCategoryDAO productCategoryDAO;
	public ProductTypeDAO productTypeDAO;
	public ConfigModelsService configModelsService;
	public QuotationsDAO quotationsDAO;
	public QuotationsDataDAO quotationsDataDAO;
	public ContractQuotationsService contractQuotationsService;
	public ContractOrderDAO contractOrderDAO;
	public UserDAO userDAO;
	public ContractDAO contractDAO;
	public UserServiceImpl userService;
	public ContractOrderService contractOrderService;
	public ContractReceivePaymentDAO contractReceivePaymentDAO;
	public ContractReceivePaymentDataDAO contractReceivePaymentDataDAO;
	public ContractReceivePaymentService icontractReceivePaymentService;
	public PurchaseCompanyService purchaseCompanyService;
	public ContractReceivePaymentDataService contractReceivePaymentDataService;
	public PurchaseOrderService purchaseOrderService;
	public ArrivalProvedDAO arrivalProvedDAO;
	public ContractOrderRelationshipDataDAO contractOrderRelationshipDataDAO;
	public RightDAO rightDAO;
	public RoleDAO roleDAO;
	public RightRoleDAO rightRoleDAO;
	public InvoiceService invoiceService;
	public ContractOrderRelationshipDataService contractOrderRelationshipDataService;
	public Parameters para = Parameters.getInstance();
	public ModelDataDAO modelDataDAO;
	public CustomerAddressInfoService customerAddressInfoService;
	public BaseTest(){
		ctx = new ClassPathXmlApplicationContext("modules/applicationContext.xml");
		if (ctx != null)
			System.out.println("success spring");
		dataSourceDAO = (DataSourceDAO) ctx.getBean("dataSourceDAO");
		dataSourceService = (DataSourceService) ctx.getBean("dataSourceService");
		dataRecordDAO = (DataRecordDAO) ctx.getBean("dataRecordDAO");
		configModelsDAO = (ConfigModelsDAO) ctx.getBean("configModelsDAO");
		contractService = (ContractService) ctx.getBean("contractService");
		productTypeDAO = (ProductTypeDAO) ctx.getBean("productTypeDAO");
		productCategoryDAO = (ProductCategoryDAO) ctx.getBean("productCategoryDAO");
		configModelsService = (ConfigModelsService) ctx.getBean("configModelsService");
		quotationsDAO = (QuotationsDAO) ctx.getBean("quotationsDAO");
		quotationsDataDAO = (QuotationsDataDAO) ctx.getBean("quotationsDataDAO");
		contractQuotationsService = (ContractQuotationsService) ctx.getBean("icontractQuotationsService");
		contractOrderDAO = (ContractOrderDAO) ctx.getBean("contractOrderDAO");
		userDAO = (UserDAO) ctx.getBean("userDAO");
		contractDAO = (ContractDAO) ctx.getBean("contractDAO");
		userService = (UserServiceImpl) ctx.getBean("userService");
		contractOrderService = (ContractOrderService) ctx.getBean("contractOrderService");
		contractReceivePaymentDAO = (ContractReceivePaymentDAO) ctx.getBean("contractReceivePaymentDAO");
		contractReceivePaymentDataDAO = (ContractReceivePaymentDataDAO) ctx.getBean("contractReceivePaymentDataDAO");
		icontractReceivePaymentService = (ContractReceivePaymentService) ctx.getBean("icontractReceivePaymentService");
		purchaseCompanyService = (PurchaseCompanyService) ctx.getBean("purchaseCompanyService");
		contractReceivePaymentDataService = (ContractReceivePaymentDataService) ctx.getBean("contractReceivePaymentDataService");
		purchaseOrderService = (PurchaseOrderService) ctx.getBean("purchaseOrderService");
		arrivalProvedDAO = (ArrivalProvedDAO) ctx.getBean("arrivalProvedDAO");
		contractOrderRelationshipDataDAO = (ContractOrderRelationshipDataDAO) ctx.getBean("contractOrderRelationshipDataDAO");
		rightDAO = (RightDAO) ctx.getBean("rightDAO");
		roleDAO = (RoleDAO) ctx.getBean("roleDAO");
		rightRoleDAO = (RightRoleDAO) ctx.getBean("rightRoleDAO");
		customerAddressInfoService = (CustomerAddressInfoService) ctx.getBean("customerAddressInfoService");
		invoiceService = (InvoiceService) ctx.getBean("invoiceService");
		modelDataDAO = (ModelDataDAO) ctx.getBean("modelDataDAO");
		contractOrderRelationshipDataService = (ContractOrderRelationshipDataService) ctx.getBean("contractOrderRelationshipDataService");
		para.exportExcelPath =localTomcatDir+"download/quotations/";
		para.exportWordPath =localTomcatDir+"download/ContractTemplates/";
		para.templatesExcelPath = localTomcatDir+"upload/quotations/";
		para.templatesWordPath =localTomcatDir+"upload/ContractTemplates/";
		para.purchaseWordPath = localTomcatDir+"download/purchaseOrderFile/";
		para.provedPath = localTomcatDir+"upload/ArrivalProved/";
	} 
}
